volumes:
  exchange_postgres:
  exchange_redis:
  exchange_static:
  exchange_rabbitmq:
  exchange_csv:
  exchange_web_logs:
  exchange_default_logs:
  exchange_check_condition_logs:
  exchange_positions_logs:
  exchange_market_logs:
  exchange_websocket_okx_orders_logs:
  exchange_websocket_okx_positions_logs:
  exchange_websocket_okx_ask_bid_logs:
  exchange_websocket_okx_last_price_logs:
  exchange_websocket_okx_market_price_logs:
  exchange_websocket_binance_ask_bid_logs:

networks:
  layer:
    driver: bridge

services:
  web:
    image: exchange:latest
    deploy:
      mode: replicated
      replicas: 1
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /app/wait-for-it.sh -q -s -h postgres -p 5432 -- /app/entrypoint.sh
    restart: always
    volumes:
      - exchange_static:/app/static
      - exchange_csv:/opt/csv
      - exchange_web_logs:/app/logs
    networks:
      - layer
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    # logging:
    #   driver: syslog
    #   options:
    #     tag: exchange_web
    #     syslog-facility: local5

  rabbitmq:
    image: rabbitmq:management
    env_file:
      - .env
    volumes:
      - exchange_rabbitmq:/var/lib/rabbitmq
    networks:
      - layer

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - exchange_static:/app/static:ro
    ports:
      - "8000:80"
    depends_on:
      - web
    networks:
      - layer

  postgres:
    image: postgres:latest
    command: postgres -c 'max_connections=2000'
    env_file:
      - .env
    volumes:
      - exchange_postgres:/var/lib/postgresql/data
    networks:
      - layer

  redis:
    image: redis:latest
    entrypoint: redis-server --appendonly yes --maxmemory-policy volatile-ttl --aof-use-rdb-preamble yes --save "" --maxclients 65000
    volumes:
      - exchange_redis:/data
    networks:
      - layer

  flower:
    image: exchange:latest
    entrypoint: /app/wait-for-it.sh -q -s -h rabbitmq -p 5672 -- celery -A exchange flower -l INFO --host=0.0.0.0 --port=5555
    restart: always
    env_file:
      - .env
    ports:
      - "51455:5555"
    depends_on:
      - rabbitmq
    networks:
      - layer

  beat:
    image: exchange:latest
    entrypoint: sh -c "sleep 5 && celery -A exchange beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    depends_on:
      - web
      - rabbitmq
      - redis
      - postgres
      - default
      - positions
      - market
      - check_condition
      - websocket_okx_orders
      - websocket_okx_ask_bid
      - websocket_okx_positions
      - websocket_binance_ask_bid
      - websocket_okx_last_price
    env_file:
      - .env
    networks:
      - layer

  default:
    image: exchange:latest
    entrypoint: celery -A exchange worker -c 5 -l INFO -Q default
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    volumes:
      - exchange_default_logs:/app/logs
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - web
    env_file:
      - .env
    networks:
      - layer

  check_condition:
    image: exchange:latest
    entrypoint: celery -A exchange worker -c 50 -l INFO -Q check_condition
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    volumes:
      - exchange_check_condition_logs:/app/logs
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - web
    env_file:
      - .env
    networks:
      - layer

  positions:
    image: exchange:latest
    entrypoint: celery -A exchange worker -c 20 -l INFO -Q positions
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    volumes:
      - exchange_positions_logs:/app/logs
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - web
    env_file:
      - .env
    networks:
      - layer

  market:
    image: exchange:latest
    entrypoint: celery -A exchange worker -c 20 -l INFO -Q market 
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    volumes:
      - exchange_market_logs:/app/logs
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - web
    env_file:
      - .env
    networks:
      - layer

  websocket_okx_orders:
    image: exchange:latest
    entrypoint: celery -A exchange worker -c 1 -l INFO -Q websocket_okx_orders
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    volumes:
      - exchange_websocket_okx_orders_logs:/app/logs
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - web
    env_file:
      - .env
    networks:
      - layer

  websocket_okx_last_price:
    image: exchange:latest
    entrypoint: celery -A exchange worker -c 1 -l INFO -Q websocket_okx_last_price
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    volumes:
      - exchange_websocket_okx_last_price_logs:/app/logs
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - web
    env_file:
      - .env
    networks:
      - layer

  websocket_okx_ask_bid:
    image: exchange:latest
    entrypoint: celery -A exchange worker -c 1 -l INFO -Q websocket_okx_ask_bid
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    volumes:
      - exchange_websocket_okx_ask_bid_logs:/app/logs
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - web
    env_file:
      - .env
    networks:
      - layer

  websocket_binance_ask_bid:
    image: exchange:latest
    entrypoint: celery -A exchange worker -c 1 -l INFO -Q websocket_binance_ask_bid
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - web
    env_file:
      - .env
    volumes:
      - exchange_csv:/opt/csv
      - exchange_websocket_binance_ask_bid_logs:/app/logs
    networks:
      - layer

  websocket_okx_market_price:
    image: exchange:latest
    entrypoint: celery -A exchange worker -c 1 -l INFO -Q websocket_okx_market_price
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    volumes:
      - exchange_websocket_okx_market_price_logs:/app/logs
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - web
    env_file:
      - .env
    networks:
      - layer

  websocket_okx_positions:
    image: exchange:latest
    entrypoint: celery -A exchange worker -c 1 -l INFO -Q websocket_okx_positions
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    volumes:
      - exchange_websocket_okx_positions_logs:/app/logs
    depends_on:
      - rabbitmq
      - redis
      - postgres
      - web
    env_file:
      - .env
    networks:
      - layer
